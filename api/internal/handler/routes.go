// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	chat "zero-chat/api/internal/handler/chat"
	contact "zero-chat/api/internal/handler/contact"
	user "zero-chat/api/internal/handler/user"
	"zero-chat/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Authority},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/chat",
					Handler: chat.ChatHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/send",
					Handler: chat.SendMsgHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/all",
					Handler: chat.GetAllChatHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/detail",
					Handler: chat.GetChatDetailHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/chat"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: user.LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/reg",
				Handler: user.RegisterHandler(serverCtx),
			},
		},
		rest.WithPrefix("/user"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Authority},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/get",
					Handler: contact.GetContactHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/add",
					Handler: contact.AddContactHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/del",
					Handler: contact.DelContactHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/search",
					Handler: contact.SearchContactHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/search/user",
					Handler: contact.SearchUserHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/user"),
	)
}
